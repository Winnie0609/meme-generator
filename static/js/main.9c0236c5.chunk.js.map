{"version":3,"sources":["component/meme.js","App.js","index.js"],"names":["Meme","template","onClick","className","src","url","alt","name","App","useState","templates","setTemplates","setTemplate","topText","setTopText","bottomText","setBottomText","meme","setMeme","start","setStart","restart","useEffect","fetch","then","res","json","data","memes","style","margin","href","target","rel","onSubmit","e","a","preventDefault","params","template_id","id","text0","text1","username","process","password","obj","Object","entries","map","key","value","join","response","classname","placeholder","onChange","type","reactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c0236c5.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"../index.css\"\r\n\r\nfunction Meme({template, onClick}){\r\n    return(\r\n        <div className=\"meme-name\">\r\n            <img  \r\n                src={template.url} \r\n                alt={template.name}\r\n                onClick={onClick}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Meme","import React, {useState, useEffect} from \"react\"\nimport Meme from \"./component/meme\"\nimport \"./index.css\"\n\nconst username = process.env.REACT_APP_IMGFLIP_USERNAME\nconst password = process.env.REACT_APP_IMGFLIP_PASSWORD\n\nconst objectToQueryParam = (obj) => {\n    const params = Object.entries(obj).map(([key, value]) => `${key}=${value}`)\n    return \"?\" + params.join(\"&\")\n}\n\nfunction App() {\n    const [templates, setTemplates] = useState([])\n    const [template, setTemplate] = useState(null)\n    const [topText, setTopText] = useState(\"Top Text\")\n    const [bottomText, setBottomText] = useState(\"Bottom Text\")\n    const [meme, setMeme] = useState(null)\n    const [start, setStart] = useState(true)\n    \n    useEffect(() => {\n      fetch(\"https://api.imgflip.com/get_memes\")\n        .then(res => res.json()\n        .then(json => setTemplates(json.data.memes)) \n      )},[])\n\n    function restart() {\n      setMeme(null)\n      setTemplate(null)\n      setTopText(\"\")\n      setBottomText(\"\")\n    }\n\n    if (meme) {\n      return (\n        <div className=\"showPage\">\n          <div className=\"show-header\">\n            <h1>Meme Generator</h1>\n            <p>Feel free to download you meme!</p>\n          </div>\n          <div className=\"new-meme\">\n            <button onClick={() => restart()}>Create more Meme!</button>\n            <img src={ meme } alt=\"custom meme\" />\n          </div>\n            <div style={{margin:\"20px\"}}></div>\n        </div>\n      )\n    }\n\n    return (\n      <div className=\"all-memes\">\n        {start && (\n          <div className=\"landing\">\n            <div className=\"start\">\n              <h1>Meme Generator</h1>\n              <p>I am so happy to be a meme.</p>\n              <button onClick={()=> setStart(!start)}>\n                Get started <i className=\"fas fa-chevron-right\"></i>\n              </button>\n            </div>\n\n            <div className=\"credit\"> Pi credits to : \n              <a href=\"https://www.inverse.com/article/60923-strange-planet-book-visual-glossary\" target=\"_blank\" rel=\"noreferrer\">JAKE KLEINMAN</a>\n            </div>\n          </div>\n        )}\n\n        {!start && template && (\n          <div className=\"editPage\">\n            <button onClick={() => restart()}className=\"back-btn\">\n              <i className=\"fas fa-arrow-left\"></i>\n                Back to template\n            </button>\n\n             <div className=\"edit-header\">\n                <h1>Meme Generator</h1>\n                <p>Add Some Word to The Picture.</p>\n              </div>\n\n            <form \n                onSubmit = { async (e) => {\n                  e.preventDefault()\n\n                  const params = {\n                    template_id: template.id,\n                    text0: topText,\n                    text1: bottomText,\n                    username: username,\n                    password: password,\n                  }\n\n                  const response = await fetch(`https://api.imgflip.com/caption_image${objectToQueryParam(params)}`)\n                  const json = await response.json()\n                  setMeme (json.data.url)\n                }}\n              >\n              <div className=\"edit-place \">\n                <div className=\"edit-img-name\">\n                  <Meme template = {template} />\n                  <p>{template.name}</p>\n                </div>\n\n                <div className=\"edit-input\">\n                    <input \n                      classname = \"top-text\"\n                      placeholder = \"Top Text\"\n                      value = {topText}\n                      onChange={(e) => setTopText(e.target.value)}\n                    />\n\n                    <input \n                      placeholder = \"Bottom Text\"\n                      value = {bottomText}\n                      onChange={(e) => setBottomText(e.target.value)}\n                    />\n                      <button type = \"submit\"> Generate </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        )}\n\n        {!start &&!template && (\n          <div className=\"templatePage\">\n            <div className=\"template-header\">\n              <h1>Meme Generator</h1>\n              <p>I am so happy to be a meme.</p>\n            </div>\n\n            <div className=\"meme meme-card\">\n              {templates.map((template) => {\n                return (\n                  <>\n                    <Meme \n                      key = {template.id}\n                      template={template}\n                      onClick={() => {setTemplate(template)}}\n                    />\n                  </>\n                )\n              })}\n              <div style={{margin:\"20px\"}}></div>\n            </div>\n          </div>\n        )}\n      </div>\n    )\n}\n\nexport default App\n\n","import React from \"react\"\nimport reactDom from \"react-dom\"\nimport App from \"./App\"\nimport \"./index.css\"\n\n\nreactDom.render(\n    <>\n      <App/>\n    </> \n,document.getElementById(\"root\"))"],"sourceRoot":""}